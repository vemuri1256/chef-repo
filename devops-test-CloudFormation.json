{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "devops-test",
    "Parameters": {
        "KeyName": {
            "Description": "KeyPair Name for the EC2 Instances.",
            "Type": "String",
            "Default": "vemuri-dev",
            "ConstraintDescription": "Must be an existing Key Pair."
        },
        "InstanceType": {
            "Description": "EC2 instance type",
            "Type": "String",
            "Default": "t2.micro",
            "ConstraintDescription" : "Must be an m4.large due to encrypted EBS volumes."
        },
        "Subnets": {
            "Description": "Subnet for ",
            "Type": "CommaDelimitedList",
            "Default": "subnet-aeb58784"
        },
        "SecurityGroup": {
            "Description": "ID of SecurityGroup",
            "Type": "String",
            "Default": "sg-173b2d6c",
            "ConstraintDescription": "Security Group must already exist."
        },
        "AvailabilityZones": {
            "Default": "us-east-1b",
            "Description": "Comma separated list of availability zones (MUST MATCH Subnets Parameter)",
            "Type": "CommaDelimitedList"
        },
         "MinAppCount": {
            "Description": "Minimum number of EC2 instances to launch.",
            "Type": "Number",
            "Default": "1",
            "MinValue": "1",
            "MaxValue": "4"
        },
        "MaxAppCount": {
            "Description": "Maximum number of EC2 instances to launch.",
            "Type": "Number",
            "Default": "2",
            "MinValue": "1",
            "MaxValue": "2"
        },
        "ScaleUp": {
            "Description": "CPU Percentage to Scale Up.",
            "Type": "Number",
            "Default": "60",
            "MinValue": "10",
            "MaxValue": "100"
        },
        "ScaleDown": {
            "Description": "CPU Percentage to Scale Down.",
            "Type": "Number",
            "Default": "20",
            "MinValue": "10",
            "MaxValue": "100"
        },
        "Env": {
            "Description": "Environment description.",
            "Type": "String",
            "Default": "DEV"
        }
    },
    "Mappings": {
        "AWSRegionArch2AMI": {
            "us-east-1": {
                "64": "ami-6869aa05"
            }
        }
    },
    "Resources": {
        "devopsAppASG": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "UpdatePolicy": {
                "AutoScalingRollingUpdate": {
                    "MinInstancesInService": "1",
                    "MaxBatchSize": "1",
                    "PauseTime": "PT10M0S"
                }
            },
            "Properties": {
                "VPCZoneIdentifier": {
                        "Ref": "Subnets"
                },
                "LaunchConfigurationName": {
                    "Ref": "AppLaunchConfig"
                },
                "MaxSize": {
                    "Ref": "MaxAppCount"
                },
                "MinSize": {
                    "Ref": "MinAppCount"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "vemuri-dev",
                        "PropagateAtLaunch": "true"
                    },
                    {
                        "Key": "Application Name",
                        "Value": "devops-test",
                        "PropagateAtLaunch": "true"
                    },
                    {
                        "Key": "Environment",
                        "Value": "DEV",
                        "PropagateAtLaunch": "true"
                    }
                ]
            },
            "DependsOn": []
        },
        "AppLaunchConfig": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSRegionArch2AMI",
                        {
                            "Ref": "AWS::Region"
                        },
                        "64"
                    ]
                },
                "AssociatePublicIpAddress" : "true",
                "KeyName": {
                    "Ref": "KeyName"
                },
                "SecurityGroups": [
                    {
                        "Ref": "SecurityGroup"
                    }
                ],
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                "#!/bin/bash -ex \n",
                "exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1 \n",
                "export HOSTNAME=$( curl 169.254.169.254/latest/meta-data/local-hostname/ )\n",

                "#Install nginx\n",
                " cd /tmp && curl -O https://s3.amazonaws.com/devopst/nginx-1.10.0-1.el6.ngx.x86_64.rpm && chmod 777 nginx-1.10.0-1.el6.ngx.x86_64.rpm \n",
                " rpm -Uvh nginx-1.10.0-1.el6.ngx.x86_64.rpm && service nginx start \n",
                "#Install the Chef-client \n",
                "curl -Lo chef.rpm https://packages.chef.io/stable/el/6/chef-12.12.15-1.el6.x86_64.rpm && rpm -Uvh chef.rpm \n",                
                "#Get Chef artifacts code from github \n",
                "curl -L https://github.com/vemuri1256/chef-repo/archive/master.zip > ./chef-repo.zip \n",
                "unzip ./chef-repo.zip && cd chef-repo-master && \n",
                "#Run the Chef-client to configure and deploy \n",
                "chef-client -z -o test_devops \n"

                            ]
                        ]
                    }
                }
            }
        },
        "CPUAlarmHigh": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Scale-up if CPU is high for 5 minutes",
                "MetricName": "CPUUtilization",
                "Namespace": "AWS/EC2",
                "Statistic": "Average",
                "Period": "60",
                "EvaluationPeriods": "5",
                "Threshold": {
                    "Ref": "ScaleUp"
                },
                "AlarmActions": [
                    {
                        "Ref": "ScaleUpPolicy"
                    }
                ],
                "OKActions": [],
                "Dimensions": [
                    {
                        "Name": "AutoScalingGroupName",
                        "Value": {
                            "Ref": "AppLaunchConfig"
                        }
                    }
                ],
                "ComparisonOperator": "GreaterThanThreshold"
            }
        },
        "CPUAlarmNormal": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Scale-down if CPU is low for 15 minutes",
                "MetricName": "CPUUtilization",
                "Namespace": "AWS/EC2",
                "Statistic": "Average",
                "Period": "60",
                "EvaluationPeriods": "15",
                "Threshold": {
                    "Ref": "ScaleDown"
                },
                "AlarmActions": [
                    {
                        "Ref": "ScaleDownPolicy"
                    }
                ],
                "OKActions": [],
                "Dimensions": [
                    {
                        "Name": "AutoScalingGroupName",
                        "Value": {
                            "Ref": "AppLaunchConfig"
                        }
                    }
                ],
                "ComparisonOperator": "LessThanThreshold"
            }
        },
        "ScaleUpPolicy": {
            "Type": "AWS::AutoScaling::ScalingPolicy",
            "Properties": {
                "AdjustmentType": "ChangeInCapacity",
                "AutoScalingGroupName": {
                    "Ref": "devopsAppASG"
                },
                "Cooldown": "60",
                "ScalingAdjustment": "1"
            }
        },
        "ScaleDownPolicy": {
            "Type": "AWS::AutoScaling::ScalingPolicy",
            "Properties": {
                "AdjustmentType": "ChangeInCapacity",
                "AutoScalingGroupName": {
                    "Ref": "devopsAppASG"
                },
                "Cooldown": "60",
                "ScalingAdjustment": "-1"
            }
        }
    }
}
